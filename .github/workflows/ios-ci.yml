# ================================
# FILE: .github/workflows/ios-ci.yml
# Continuous Integration: build + test on push/PR to main
# ================================
name: iOS CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT: "Practice Plan Generator.xcodeproj"  # If you later use a workspace, change to WORKSPACE and set it.
  SCHEME:  "Practice Plan Generator"            # Make sure this matches your Xcode scheme name.
  DEST:    "platform=iOS Simulator,name=iPhone 15"

jobs:
  build-and-test:
    runs-on: macos-15  # GitHub-hosted macOS with Xcode preinstalled
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Xcode DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-deriveddata-${{ hashFiles('**/*.swift', '**/*.pbxproj') }}
          restore-keys: |
            ${{ runner.os }}-deriveddata-

      # If you use CocoaPods later, uncomment these 3 lines:
      # - name: Install CocoaPods
      #   run: |
      #     sudo gem install cocoapods --no-document
      #     pod install
      #   working-directory: .

      - name: Show Xcode version
        run: xcodebuild -version

      # Build (fails fast if code doesn't compile)
      - name: Build (Debug)
        run: |
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -destination "$DEST" \
            -configuration Debug \
            -skipPackagePluginValidation \
            clean build

      # Unit/UI Tests (if you have test targets)
      - name: Test
        run: |
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -destination "$DEST" \
            -configuration Debug \
            -enableCodeCoverage YES \
            test

      - name: Upload coverage (optional placeholder)
        if: always()
        run: echo "Add codecov here later if desired."
